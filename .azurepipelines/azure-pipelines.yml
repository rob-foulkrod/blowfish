name: yaml-$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
    - refs/heads/main

variables:
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.sln'

- name: BuildParameters.TestProjects
  value: '**/*[Tt]ests/*.csproj'

- name: BuildConfiguration
  value: 'Release'


jobs:
- job: CI
  displayName: CI
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(BuildParameters.RestoreBuildProjects)
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: $(BuildParameters.RestoreBuildProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: "Running Tests"
    inputs:
      command: 'test'
      projects: '**/*[Test]*/*.csproj'
      arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

  - task: PublishCodeCoverageResults@1
    displayName: "Publish code coverage results"
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "$(Agent.TempDirectory)/*coverage.cobertura.xml"

- job: Build
  displayName: Build
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      projects: $(BuildParameters.RestoreBuildProjects)
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
